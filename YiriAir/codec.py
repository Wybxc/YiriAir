# -*- encoding=utf8 -*-

# QQ 的表情包括三种：
# 1. QQ 内置表情，并且轻聊版支持（FACE_TYPE_1）。这一类表情的编码是连续两个 ASCII 字符，
#    第一个是 \x14，第二个代表表情类型。
# 2. QQ 内置表情，但轻聊版不支持（FACE_TYPE_@）。这一类表情在收到时会转化为 /表情名称。
# 3. Emoji 表情。与 Unicode 所规定的 Emoji 一致。

from emoji import EMOJI_ALIAS_UNICODE, demojize
import re

# 第一类表情
FACE_TYPE_1 = {'\u0017': '微笑', '\u0028': '撇嘴', '\u0013': '色', '\u002B': '发呆',
               '\u0015': '得意', '\u0009': '流泪', '\u0014': '害羞', '\u006A': '闭嘴',
               '\u0023': '睡', '\u00FA': '大哭', '\u0019': '尴尬', '\u0018': '发怒',
               '\u0001': '调皮', '\u0000': '呲牙', '\u0021': '惊讶', '\u0020': '难过',
               '\u000C': '酷', '\u001B': '冷汗', '\u000D': '抓狂', '\u0016': '吐',
               '\u0003': '偷笑', '\u0012': '可爱', '\u001E': '白眼', '\u001F': '傲慢',
               '\u0051': '饥饿', '\u0052': '困', '\u001A': '惊恐', '\u0002': '流汗',
               '\u0025': '憨笑', '\u0032': '悠闲', '\u002A': '奋斗', '\u0053': '咒骂',
               '\u0022': '疑问', '\u000B': '嘘...', '\u0031': '晕', '\u0054': '折磨',
               '\u0027': '衰', '\u004E': '骷髅', '\u0005': '敲打', '\u0004': '再见',
               '\u0006': '擦汗', '\u0055': '抠鼻', '\u0056': '鼓掌', '\u0057': '糗大了',
               '\u002E': '坏笑', '\u0058': '左哼哼', '\u002C': '右哼哼', '\u0059': '哈欠',
               '\u0030': '鄙视', '\u000E': '委屈', '\u005A': '快哭了', '\u0029': '阴险',
               '\u0024': '亲亲', '\u005B': '吓', '\u0033': '可怜', '\u0011': '菜刀',
               '\u003C': '西瓜', '\u003D': '啤酒', '\u005C': '篮球', '\u005D': '乒乓',
               '\u0042': '咖啡', '\u003A': '饭', '\u0007': '猪头', '\u0008': '玫瑰',
               '\u0039': '凋谢', '\u001D': '示爱', '\u001C': '爱心', '\u004A': '心碎',
               '\u003B': '蛋糕', '\u0050': '闪电', '\u0010': '炸弹', '\u0046': '刀',
               '\u004D': '足球', '\u003E': '瓢虫', '\u000F': '便便', '\u0044': '月亮',
               '\u004B': '太阳', '\u004C': '礼物', '\u002D': '拥抱', '\u0034': '赞',
               '\u0035': '踩', '\u0036': '握手', '\u0037': '胜利', '\u0038': '抱拳',
               '\u003F': '勾引', '\u0049': '拳头', '\u0048': '差劲', '\u0041': '爱你',
               '\u005E': 'NO', '\u0040': 'OK', '\u0026': '爱情', '\u002F': '飞吻',
               '\u005F': '跳跳', '\u0047': '发抖', '\u0060': '怄火', '\u0061': '转圈',
               '\u0062': '磕头', '\u0063': '回头', '\u0064': '跳绳', '\u004F': '挥手',
               '\u0065': '激动', '\u0066': '街舞', '\u0067': '献吻', '\u0068': '左太极',
               '\u0069': '右太极', '\u006C': '双喜', '\u006D': '鞭炮', '\u006E': '灯笼',
               '\u006F': '发财', '\u0070': 'K歌', '\u0071': '购物', '\u0072': '邮件',
               '\u0073': '帅', '\u0074': '喝彩', '\u0075': '祈祷', '\u0076': '爆筋',
               '\u0077': '棒棒糖', '\u0078': '喝奶', '\u0079': '下面', '\u007A': '香蕉',
               '\u007B': '飞机', '\u007C': '开车', '\u007D': '高铁左车头', '\u007E': '车厢',
               '\u007F': '高铁右车头', '\u0080': '多云', '\u0081': '下雨', '\u0082': '钞票',
               '\u0083': '熊猫', '\u0084': '灯泡', '\u0085': '风车', '\u0086': '闹钟',
               '\u0087': '打伞', '\u0088': '彩球', '\u0089': '钻戒', '\u008A': '沙发',
               '\u008B': '纸巾', '\u008C': '药', '\u008D': '手枪', '\u008E': '青蛙',
               '\u00A4': '眨眼睛', '\u00AE': '笑哭', '\u00AB': 'doge', '\u00A5': '泪奔',
               '\u00A6': '无奈', '\u00A1': '托腮', '\u00A7': '卖萌', '\u00AA': '斜眼笑',
               '\u00A9': '喷血', '\u00AC': '惊喜', '\u00AD': '骚扰', '\u00A8': '小纠结',
               '\u00AF': '我最美', '\u00B4': '蛋', '\u00B8': '红包', '\u00B0': '河蟹',
               '\u00B1': '羊驼', '\u00B6': '菊花', '\u00B3': '幽灵', '\u00B9': '大笑',
               '\u008F': '不开心', '\u0092': '冷漠', '\u0093': '呃', '\u0094': '好棒',
               '\u0095': '拜托', '\u0096': '点赞', '\u0097': '无聊', '\u0098': '托脸',
               '\u0099': '吃', '\u009A': '送花', '\u009B': '害怕', '\u009C': '花痴',
               '\u009D': '小样', '\u009F': '飙泪', '\u00A0': '我不看'}

FACE_TYPE_1_REVERSED = {v: k for k, v in FACE_TYPE_1.items()}

# 第二类表情
FACE_TYPE_2 = ['加油必胜', '加油抱抱', '口罩护体', '搬砖中', '忙到飞起', '脑阔疼', '沧桑', '捂脸',
               '辣眼睛', '哦哟', '头秃', '问号脸', '暗中观察', 'emm', '吃瓜', '呵呵哒', '我酸了', '太南了',
               '头撞击', '甩头', '扔狗', '糊脸', '偷看', '拍桌', '啵啵', '扯一扯', '喷脸', '拍头', '舔一舔', '干杯',
               '扇脸', '蹭一蹭', '撩一撩', '哼', '掐一掐', '顶呱呱', '抱抱', '原谅', '佛系', '拽炸天', '颤抖',
               '生日快乐', '嘲讽', '开枪', '啃头', '恭喜', '惊呆', '暴击', '拍手']

FACE_TYPE_2_SET = set(FACE_TYPE_2)

FACE_TYPE_2_TRIE = {'加': {'油': {'必': {'胜': {'': {}}},
                                '抱': {'抱': {'': {}}}}},
                    '口': {'罩': {'护': {'体': {'': {}}}}},
                    '搬': {'砖': {'中': {'': {}}}},
                    '忙': {'到': {'飞': {'起': {'': {}}}}},
                    '脑': {'阔': {'疼': {'': {}}}},
                    '沧': {'桑': {'': {}}},
                    '捂': {'脸': {'': {}}},
                    '辣': {'眼': {'睛': {'': {}}}},
                    '哦': {'哟': {'': {}}},
                    '头': {'秃': {'': {}},
                          '撞': {'击': {'': {}}}},
                    '问': {'号': {'脸': {'': {}}}},
                    '暗': {'中': {'观': {'察': {'': {}}}}},
                    'e': {'m': {'m': {'': {}}}},
                    '吃': {'瓜': {'': {}}},
                    '呵': {'呵': {'哒': {'': {}}}},
                    '我': {'酸': {'了': {'': {}}}},
                    '太': {'南': {'了': {'': {}}}},
                    '甩': {'头': {'': {}}},
                    '扔': {'狗': {'': {}}},
                    '糊': {'脸': {'': {}}},
                    '偷': {'看': {'': {}}},
                    '拍': {'桌': {'': {}}, '头': {'': {}}, '手': {'': {}}},
                    '啵': {'啵': {'': {}}},
                    '扯': {'一': {'扯': {'': {}}}},
                    '喷': {'脸': {'': {}}},
                    '舔': {'一': {'舔': {'': {}}}},
                    '干': {'杯': {'': {}}},
                    '扇': {'脸': {'': {}}},
                    '蹭': {'一': {'蹭': {'': {}}}},
                    '撩': {'一': {'撩': {'': {}}}},
                    '哼': {'': {}},
                    '掐': {'一': {'掐': {'': {}}}},
                    '顶': {'呱': {'呱': {'': {}}}},
                    '抱': {'抱': {'': {}}},
                    '原': {'谅': {'': {}}},
                    '佛': {'系': {'': {}}},
                    '拽': {'炸': {'天': {'': {}}}},
                    '颤': {'抖': {'': {}}},
                    '生': {'日': {'快': {'乐': {'': {}}}}},
                    '嘲': {'讽': {'': {}}},
                    '开': {'枪': {'': {}}},
                    '啃': {'头': {'': {}}},
                    '恭': {'喜': {'': {}}},
                    '惊': {'呆': {'': {}}},
                    '暴': {'击': {'': {}}}}

# 所有表情的名称
FACE_NAMES = list(FACE_TYPE_1_REVERSED.keys()) + FACE_TYPE_2


def encode_qq_face(string):
    '''将含有表情代码的字符串转换为编码后的表情。

    表情代码的格式为`[FACE:表情名称]`，其中 QQ 内置表情与`FACE_NAMES`中的名称一致，emoji 与标准英文名称一致。

    例如：`[FACE:斜眼笑]` `[FACE:smile]`
    '''
    def replace(match):
        face_name = match.group(1)

        type1 = FACE_TYPE_1_REVERSED.get(face_name)
        if type1:
            return '\u0014' + type1

        type2 = face_name in FACE_TYPE_2_SET
        if type2:
            return '/' + face_name

        emj = EMOJI_ALIAS_UNICODE.get(f':{face_name}:')
        if emj:
            return emj

        return face_name

    pattern = re.compile(
        r'\[FACE:([a-zA-Z0-9\\+\\-_&.ô’Åéãíç()!#*\u4e00-\u9fa5]+)\]')
    return pattern.sub(replace, string)


def decode_qq_face(string):
    '''将编码后的表情转换为含有表情代码的字符串。

    表情代码的格式为`[FACE:表情名称]`，其中 QQ 内置表情与`FACE_NAMES`中的名称一致，emoji 与标准英文名称一致。

    例如：`[FACE:斜眼笑]` `[FACE:smile]`
    '''
    string = demojize(string, delimiters=('[FACE:', ']'))

    # 使用词法自动机。
    # state 0: 一般状态，接收到 \x14 进入 state 1，接收到 / 进入 state 2，否则输出接受的字符。
    # state 1: 准备识别 FACE_TYPE_1 的状态，接收到可识别字符输出表情代码，否则输出 \x14 及接受的字符。
    #          之后返回 state 0。
    # state 2: 准备 FACE_TYPE_2 的状态，根据 Trie 树进行匹配。有两个状态参数，allowed 表示已匹配的字符，
    #          current 表示下一步要使用的子树。如果输入与 current 中的某一个键值匹配，更新 allowed 及 current，
    #          保持 state 2 不变。若无法匹配且 current 有键值为空的键，通过 allowed 得出表情代码并输出，
    #          然后输出接受的字符，返回 stated 0；否则输出 / 、 allowed 及接受的字符，返回 state 0。
    state = 0
    output = ''
    allowed = ''
    current = FACE_TYPE_2_TRIE
    for char in string + '\x00':
        if state == 0:
            if char == '\x14':
                state = 1
            elif char == '/':
                state = 2
            else:
                output += char
        elif state == 1:
            face_name = FACE_TYPE_1.get(char)
            if face_name:
                output += f'[FACE:{face_name}]'
            else:
                output += '\x14' + char
            state = 0
            if char == '\x14':
                state = 1
            elif char == '/':
                state = 2
        elif state == 2:
            curr = current.get(char)
            if curr:
                allowed += char
                current = curr
            else:
                if current.get('') is not None:
                    output += f'[FACE:{allowed}]' + char
                else:
                    output += '/' + allowed + char
                allowed = ''
                current = FACE_TYPE_2_TRIE
                state = 0
                if char == '\x14':
                    state = 1
                elif char == '/':
                    state = 2

    return output.strip('\x00')
